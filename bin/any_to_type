#!python


from __future__ import with_statement
import sys
import argparse

from libcchdo.fns import read_arbitrary, all_formats
from libcchdo.formats.common import nav
from libcchdo.formats import google_wire


argparser = argparse.ArgumentParser(
    description='Convert any recognized CCHDO file to any valid output type')
argparser.add_argument('-t', '--output-type', '--type',
    choices=['str', 'dict', 'google_wire', 'nav', ] + all_formats.keys(),
    default='str', help='output types (default: str)')
argparser.add_argument('-i', '--input-type', choices=all_formats.keys(),
    help='force the input file to be read as the specified type')
argparser.add_argument('-j', '--json', action='store_true',
    help='only applies to output type google_wire. Forces the google_wire '
         'output to be valid JSON.')
argparser.add_argument('file', help='any recognized CCHDO file')


def main():
    args = argparser.parse_args()
    
    output_stream = sys.stdout
    with open(args.file, 'r') as in_file:
        file = read_arbitrary(in_file, args.input_type)

        if args.output_type == 'nav':
            nav.write(file, output_stream)
        elif args.output_type == 'google_wire':
            google_wire.write(file, output_stream, json=args.json)
        elif args.output_type == 'dict':
            print file.to_dict()
        elif args.output_type == 'str':
            print file
        else:
            try:
                format = all_formats[args.output_type]
            except (KeyError, ImportError):
                raise ValueError('Unrecognized format %s' % args.output_type)
            format.write(file, output_stream)

    return 0


if __name__ == '__main__':
    argparser.exit(main())
