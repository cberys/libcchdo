#!python

import argparse
import os
import sys

from libcchdo import LOG
from libcchdo.plot import etopo

plt = etopo.plt


argparser = argparse.ArgumentParser(
    description='Plot the world with ETOPO bathymetry')
argparser.add_argument(
    'minutes', type=int, nargs='?', default=1, choices=[1, 2, 5, 30, 60], 
    help='The desired resolution of the ETOPO grid data in minutes')
argparser.add_argument(
    '--width', type=int, default=720, choices=[240, 320, 480, 720, 1024],
    help='The desired width in pixels of the resulting plot image')
argparser.add_argument(
    '--fill_continents', type=bool, default=False,
    help='Whether to fill the continent interiors with solid black')
argparser.add_argument(
    '--projection', default='merc', choices=['merc', 'robin'],
    help='The projection of map to use')
argparser.add_argument(
    '--output_filename', default='etopo.png',
    help='Name of the output file')


def main():
    args = argparser.parse_args()

    lon0 = -90
    m = etopo.create_map(
        args.minutes, 3, 
        projection=args.projection,
        llcrnrlat=-89, llcrnrlon=lon0,
        urcrnrlat=89, urcrnrlon=lon0 + 360)
    m.drawparallels(range(-90, 90, 10), 'k', linewidth=0.1)
    m.drawmeridians(range(lon0, lon0 + 360, 20), 'k', linewidth=0.1)
    if args.fill_continents:
        m.fillcontinents(color='k')

    plt.savefig(args.output_filename, 
        dpi=etopo.preset_dpi(str(args.width)),
        format='png', transparent=True, bbox_inches='tight', pad_inches=0)
    return 0


if __name__ == '__main__':
    sys.exit(main())
